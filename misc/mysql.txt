MySQL Instructions
Enter sudo service mysqld start into the terminal

Enter /usr/libexec/mysql55/mysql_secure_installation and follow the steps for setting up your root account and password.

When prompted for the initial password press enter
If this step fails then enter /usr/libexec/mysql55/mysqladmin -u root password 'new-password'
Be sure to replace 'new-password' with your password
Now start the secure installation over again with /usr/libexec/mysql55/mysql_secure_installation and enter the password you just created
Disable remote root access and remove test database and anonymous user during the secure installation steps
Start the mysql shell with root user access by entering: mysql -uroot -p and typing in your root password when prompted

Password will be hidden while typing it in, press enter when done typing and the shell will start if the password is correct
Once inside of the shell test it out with the following commands:

CREATE database test;
USE test;
CREATE TABLE pet (name VARCHAR(20), owner VARCHAR(20), species VARCHAR(20));
INSERT INTO pet (name, owner, species) VALUES('Loki', 'Ian', 'Dog');                                                                                                                                                    
SELECT * FROM pet;




How To Install MySQL on Ubuntu 16.04
PostedNovember 23, 2016 584.6k views MYSQL UBUNTU UBUNTU 16.04
Ready to run MySQL on a DigitalOcean Droplet? Sign up here and receive a $10 credit to get started.

Introduction
MySQL is an open-source database management system, commonly installed as part of the popular LAMP (Linux, Apache, MySQL, PHP/Python/Perl) stack. It uses a relational database and SQL (Structured Query Language) to manage its data.

The short version of the installation is simple: update your package index, install the mysql-server package, and then run the included security script.

sudo apt-get update
sudo apt-get install mysql-server
mysql_secure_installation
This tutorial will explain how to install MySQL version 5.7 on a Ubuntu 16.04 server. However, if you're looking to update an existing MySQL installation to version 5.7, you can read this MySQL 5.7 update guide instead.

Prerequisites
To follow this tutorial, you will need:

One Ubuntu 16.04 server set up by following this initial server setup guide, including a sudo non-root user and a firewall.
Step 1 — Installing MySQL
On Ubuntu 16.04, only the latest version of MySQL is included in the APT package repository by default. At the time of writing, that's MySQL 5.7

To install it, simply update the package index on your server and install the default package with apt-get.

sudo apt-get update
sudo apt-get install mysql-server
You'll be prompted to create a root password during the installation. Choose a secure one and make sure you remember it, because you'll need it later. Next, we'll finish configuring MySQL.

Step 2 — Configuring MySQL
For fresh installations, you'll want to run the included security script. This changes some of the less secure default options for things like remote root logins and sample users. On older versions of MySQL, you needed to initialize the data directory manually as well, but this is done automatically now.

Run the security script.

mysql_secure_installation
This will prompt you for the root password you created in Step 1. You can press Y and then ENTER to accept the defaults for all the subsequent questions, with the exception of the one that asks if you'd like to change the root password. You just set it in Step 1, so you don't have to change it now. For a more detailed walkthrough of these options, you can see this step of the LAMP installation tutorial.

To initialize the MySQL data directory, you would use mysql_install_db for versions before 5.7.6, and mysqld --initialize for 5.7.6 and later. However, if you installed MySQL from the Debian distribution, like in Step 1, the data directory was initialized automatically; you don't have to do anything. If you try running the command anyway, you'll see the following error:

Output
2016-03-07T20:11:15.998193Z 0 [ERROR] --initialize specified but the data directory has files in it. Aborting.
Finally, let's test the MySQL installation.

Step 3 — Testing MySQL
Regardless of how you installed it, MySQL should have started running automatically. To test this, check its status.

systemctl status mysql.service
You'll see output similar to the following:



